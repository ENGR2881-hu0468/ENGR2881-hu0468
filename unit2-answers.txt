## Socket Programming General True or False Statements
# Question 'ab': True or false: The recv() function for the C programming language is less flexible than the recvfrom() function.
ab=t
# Question 'ac': True or false: The accept() function for the C programming language accepts all waiting network sockets each time it is called.
ac=f
# Question 'ad': True or false: The accept() function for the C programming language checks for newly received socket connections.
ad=f
# Question 'ae': True or false: The send() function for the C programming language performs the same function as write(), but without the possibility to set flags.
ae=t
# Question 'af': True or false: The listen() function for the C programming language marks a socket as `passive', ready to accept new connections.
af=f
# Question 'ag': True or false: The read() function for the C programming language is the best choice for reading data from a UDP socket.
ag=t
# Question 'ah': True or false: The socket() function for the C programming language sets the address of a network socket
ah=f
# Question 'ai': True or false: The connect() function for the C programming language normally requires the network address and layer 4 address of the target.
ai=t
# Question 'aj': True or false: The read() function for the C programming language can be used to receive data from sockets.
aj=t
# Question 'ak': True or false: A network socket usually contains addressing information for layer 3, but not layer 4
ak=f
# Question 'al': True or false: The write() function for the C programming language can be used to write data to a socket.
al=t
# Question 'am': True or false: A network socket includes port numbers as well as IP addresses
am=f
# Question 'an': True or false: The bind() function for the C programming language requires a socket to already exist
an=f
# Question 'ao': True or false: The bind() function for the C programming language restricts the permissions of a network socket
ao=f
# Question 'ap': True or false: The socket() function for the C programming language can create sockets for various network protocols.
ap=t
## Correct the lines in the supplied programme
aq=3
ar=9
as=6
at=1
au=4
av=7
aw=2
ax=5
ay=8
## Correct the lines in the supplied programme
az=3
ba=7
bb=6
bc=1
bd=11
be=4
bf=12
bg=5
bh=8
bi=9
bj=2
bk=10
